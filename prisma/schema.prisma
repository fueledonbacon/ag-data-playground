generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Field {
  id                      Int          @id @default(autoincrement())
  agrian_id               String       @unique
  grower                  Grower       @relation(fields: [grower_id], references: [agrian_id])
  grower_id               String
  name                    String
  lat                     Float
  long                    Float
  soil_type               String?
  water_holding_capacity  Float?
  avg_gpm                 Int?
  du                      Float?
  area                    Float
  wetted_area_percent     Float?
  pre_infiltration_losses Float?
  canopy_cover_percent    Float?
  soil_holding_capacity   Float?
  rooting_depth           Float?
  start_date              DateTime?
  mad_percent             Float?
  kc_type                 String?      @default("")
  subscription_status     String       @default("Inactive")
  irrigated_blocks        Int          @default(1)
  depletion_limit         Float        @default(10.0)
  et_values               ETValue[]
  water_events            WaterEvent[]
  grower_id               String?
  grower                  Grower?      @relation(fields: [grower_id], references: [id])
}

model ETValue {
  key             String   @id
  date            DateTime @default(now())
  value           Float
  agrian_field_id String   @default("")
  field           Field    @relation(fields: [agrian_field_id], references: [agrian_id])
}

model WaterEvent {
  id              Int      @id @default(autoincrement())
  type            String
  date            DateTime @default(now())
  duration_hours  Int
  agrian_field_id String   @default("")
  field           Field    @relation(fields: [agrian_field_id], references: [agrian_id])
}

model User {
  id         Int                      @id @default(autoincrement())
  email      String                   @unique
  auth_key   String?
  first_name String?
  last_name  String?
  grower_rel UserGrowerRelationship[]
}

model UserGrowerRelationship {
  user_id   Int
  grower_id String
  role      String @default("admin")
  grower    Grower @relation(fields: [grower_id], references: [id])
  user      User   @relation(fields: [user_id], references: [id])

  @@id([user_id, grower_id])
}

model Grower {
  id       String               @id
  email    String?
  user_rel UserGrowerRelationship[]
  growers_fields   Field[]
}
